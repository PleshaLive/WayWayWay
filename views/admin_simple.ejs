<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Galaxy Battle Panel - Admin</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 100%);
            color: #ffffff;
            min-height: 100vh;
            padding: 20px;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
        }

        .header {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            text-align: center;
        }

        .header h1 {
            font-size: 2.5rem;
            background: linear-gradient(45deg, #4f46e5, #06b6d4);
            background-clip: text; /* standard property for compatibility */
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }

        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 20px 0;
        }

        .stat-card {
            background: rgba(79, 70, 229, 0.1);
            border: 1px solid rgba(79, 70, 229, 0.3);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #4f46e5;
        }

        .stat-label {
            font-size: 0.9rem;
            color: #888;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .section {
            background: rgba(255, 255, 255, 0.03);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
        }

        .section-title {
            font-size: 1.5rem;
            margin-bottom: 20px;
            color: #ffffff;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 20px;
        }

        .card {
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s ease;
        }

        .card:hover {
            transform: translateY(-5px);
            border-color: #4f46e5;
            box-shadow: 0 10px 30px rgba(79, 70, 229, 0.3);
        }

        .card-header {
            display: flex;
            align-items: center;
            gap: 15px;
            margin-bottom: 15px;
        }

        .card-avatar {
            width: 50px;
            height: 50px;
            border-radius: 50%;
            background: linear-gradient(45deg, #4f46e5, #06b6d4);
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            color: white;
        }

        .card-info h3 {
            margin: 0;
            font-size: 1.1rem;
        }

        .card-info p {
            margin: 5px 0 0 0;
            color: #888;
            font-size: 0.9rem;
        }

        .btn {
            background: linear-gradient(45deg, #4f46e5, #06b6d4);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            margin: 5px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(79, 70, 229, 0.4);
        }

        .search-box {
            margin-bottom: 20px;
        }

        .search-input {
            width: 100%;
            max-width: 400px;
            padding: 12px 20px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.05);
            color: white;
            font-size: 1rem;
        }

        .search-input:focus {
            outline: none;
            border-color: #4f46e5;
            box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.2);
        }

        .empty-state {
            text-align: center;
            padding: 40px;
            color: #888;
        }

        .loading {
            text-align: center;
            padding: 40px;
        }

        .spinner {
            border: 3px solid rgba(79, 70, 229, 0.3);
            border-top: 3px solid #4f46e5;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .controls {
            display: flex;
            gap: 15px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal.show {
            display: flex;
        }

        .modal-content {
            background: #1a1a2e;
            border-radius: 15px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-input {
            width: 100%;
            padding: 12px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.05);
            color: white;
        }

        .form-input:focus {
            outline: none;
            border-color: #4f46e5;
        }

        @media (max-width: 768px) {
            .header h1 {
                font-size: 2rem;
            }
            
            .stats {
                grid-template-columns: 1fr;
            }
            
            .grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Header -->
        <div class="header">
            <h1>üöÄ Galaxy Battle Panel</h1>
            <p>Admin Control Center</p>
            
            <div class="stats">
                <div class="stat-card">
                    <div class="stat-number" id="teams-count"><%= teams ? teams.length : 0 %></div>
                    <div class="stat-label">Teams</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number" id="players-count"><%= players ? players.length : 0 %></div>
                    <div class="stat-label">Players</div>
                </div>
            </div>
        </div>

        <!-- Teams Section -->
        <div class="section">
            <h2 class="section-title">üèÜ Teams Management</h2>
            
            <div class="controls">
                <input type="text" id="teamSearch" class="search-input" placeholder="Search teams...">
                <button class="btn" onclick="addTeam()">‚ûï Add Team</button>
            </div>
            
            <div id="teamsGrid" class="grid">
                <!-- Teams will be loaded here -->
            </div>
        </div>

        <!-- Players Section -->
        <div class="section">
            <h2 class="section-title">üë§ Players Management</h2>
            
            <div class="controls">
                <input type="text" id="playerSearch" class="search-input" placeholder="Search players...">
                <button class="btn" onclick="addPlayer()">‚ûï Add Player</button>
            </div>
            
            <div id="playersGrid" class="grid">
                <!-- Players will be loaded here -->
            </div>
        </div>
    </div>

    <!-- Data from server -->
    <script type="application/json" id="teams-data"><%- JSON.stringify(teams || []) %></script>
    <script type="application/json" id="players-data"><%- JSON.stringify(players || []) %></script>

    <script>
        // Global variables
        let allTeams = [];
        let allPlayers = [];

        $(document).ready(function() {
            console.log('Admin panel loading...');
            
            try {
                allTeams = JSON.parse(document.getElementById('teams-data').textContent || '[]');
                allPlayers = JSON.parse(document.getElementById('players-data').textContent || '[]');
                
                console.log('Data loaded:', allTeams.length, 'teams,', allPlayers.length, 'players');
                
                renderTeams();
                renderPlayers();
                setupEventHandlers();
                
                console.log('Admin panel loaded successfully!');
            } catch (error) {
                console.error('Error loading data:', error);
                showError('Error loading data: ' + error.message);
            }
        });

        function setupEventHandlers() {
            $('#teamSearch').on('input', function() {
                renderTeams($(this).val());
            });

            $('#playerSearch').on('input', function() {
                renderPlayers($(this).val());
            });
        }

        function renderTeams(searchTerm = '') {
            const container = $('#teamsGrid');
            
            if (!allTeams || allTeams.length === 0) {
                container.html(`
                    <div class="empty-state">
                        <h3>No teams found</h3>
                        <p>Start by adding your first team!</p>
                    </div>
                `);
                return;
            }

            let filteredTeams = allTeams.filter(team => 
                team.name && team.name.toLowerCase().includes(searchTerm.toLowerCase())
            );

            if (filteredTeams.length === 0) {
                container.html(`
                    <div class="empty-state">
                        <h3>No teams match your search</h3>
                        <p>Try a different search term</p>
                    </div>
                `);
                return;
            }

            const html = filteredTeams.map(team => {
                const playersCount = allPlayers.filter(p => p.team === team.name).length;
                const initial = team.name ? team.name.charAt(0).toUpperCase() : 'T';
                
                return `
                    <div class="card">
                        <div class="card-header">
                            <div class="card-avatar">${initial}</div>
                            <div class="card-info">
                                <h3>${team.name || 'Unnamed Team'}</h3>
                                <p>${playersCount} player${playersCount !== 1 ? 's' : ''}</p>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn" onclick="editTeam('${team.id}')">‚úèÔ∏è Edit</button>
                            <button class="btn" onclick="deleteTeam('${team.id}')">üóëÔ∏è Delete</button>
                        </div>
                    </div>
                `;
            }).join('');

            container.html(html);
        }

        function renderPlayers(searchTerm = '') {
            const container = $('#playersGrid');
            
            if (!allPlayers || allPlayers.length === 0) {
                container.html(`
                    <div class="empty-state">
                        <h3>No players found</h3>
                        <p>Start by adding your first player!</p>
                    </div>
                `);
                return;
            }

            let filteredPlayers = allPlayers.filter(player => 
                (player.name && player.name.toLowerCase().includes(searchTerm.toLowerCase())) ||
                (player.team && player.team.toLowerCase().includes(searchTerm.toLowerCase()))
            );

            if (filteredPlayers.length === 0) {
                container.html(`
                    <div class="empty-state">
                        <h3>No players match your search</h3>
                        <p>Try a different search term</p>
                    </div>
                `);
                return;
            }

            const html = filteredPlayers.map(player => {
                const initial = player.name ? player.name.charAt(0).toUpperCase() : 'P';
                
                return `
                    <div class="card">
                        <div class="card-header">
                            <div class="card-avatar">${initial}</div>
                            <div class="card-info">
                                <h3>${player.name || 'Unnamed Player'}</h3>
                                <p>${player.team || 'No Team'}</p>
                            </div>
                        </div>
                        <div class="card-actions">
                            <button class="btn" onclick="editPlayer('${player.id}')">‚úèÔ∏è Edit</button>
                            <button class="btn" onclick="deletePlayer('${player.id}')">üóëÔ∏è Delete</button>
                        </div>
                    </div>
                `;
            }).join('');

            container.html(html);
        }

        function addTeam() {
            const name = prompt('Enter team name:');
            if (name) {
                console.log('Adding team:', name);
                // TODO: Implement API call
            }
        }

        function editTeam(teamId) {
            const team = allTeams.find(t => t.id === teamId);
            if (team) {
                const newName = prompt('Edit team name:', team.name);
                if (newName && newName !== team.name) {
                    console.log('Editing team:', teamId, 'to', newName);
                    // TODO: Implement API call
                }
            }
        }

        function deleteTeam(teamId) {
            const team = allTeams.find(t => t.id === teamId);
            if (team && confirm(`Are you sure you want to delete "${team.name}"?`)) {
                console.log('Deleting team:', teamId);
                // TODO: Implement API call
            }
        }

        function addPlayer() {
            const name = prompt('Enter player name:');
            if (name) {
                console.log('Adding player:', name);
                // TODO: Implement API call
            }
        }

        function editPlayer(playerId) {
            const player = allPlayers.find(p => p.id === playerId);
            if (player) {
                const newName = prompt('Edit player name:', player.name);
                if (newName && newName !== player.name) {
                    console.log('Editing player:', playerId, 'to', newName);
                    // TODO: Implement API call
                }
            }
        }

        function deletePlayer(playerId) {
            const player = allPlayers.find(p => p.id === playerId);
            if (player && confirm(`Are you sure you want to delete "${player.name}"?`)) {
                console.log('Deleting player:', playerId);
                // TODO: Implement API call
            }
        }

        function showError(message) {
            const container = $('.container');
            container.prepend(`
                <div style="background: #ef4444; color: white; padding: 15px; border-radius: 8px; margin-bottom: 20px;">
                    <strong>Error:</strong> ${message}
                </div>
            `);
        }

        // Debug info
        console.log('Teams data:', allTeams);
        console.log('Players data:', allPlayers);
    </script>
</body>
</html>
