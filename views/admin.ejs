<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>Galaxy Admin Panel - Manage Teams & Players</title>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

  <style>
  /* === ОСНОВНЫЕ СТИЛИ === */
  :root {
    --font-family-base: 'Inter', sans-serif;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --color-background: #0E0A1C;
    --color-surface: #221C3B;
    --color-surface-secondary: #181f2c;
    --color-surface-tertiary: #070a10;
    --color-border: #2a3140;
    --color-border-light: #3c4455;
    --color-divider: #222836;
    --color-text-primary: #e0e7ff;
    --color-text-secondary: #a0aec0;
    --color-text-muted: #718096;
    --color-text-placeholder: #5a667a;
    --color-primary-base: #4f46e5;
    --color-primary-light: #6366f1;
    --color-primary-dark: #4338ca;
    --rgb-primary: 79, 70, 229;
    --glow-primary: 0 0 15px rgba(var(--rgb-primary), 0.7), 0 0 30px rgba(var(--rgb-primary), 0.5);
    --text-shadow-primary: 0 0 10px rgba(var(--rgb-primary), 0.8);
    --color-secondary-base: #7A64B9;
    --color-secondary-light: #7A64B9;
    --color-secondary-dark: #50467A;
    --rgb-secondary: 14, 165, 233;
    --glow-secondary: 0 0 15px rgba(var(--rgb-secondary), 0.7), 0 0 30px rgba(var(--rgb-secondary), 0.5);
    --text-shadow-secondary: 0 0 10px rgba(var(--rgb-secondary), 0.8);
    --color-success: #22c55e;
    --color-success-dark: #16a34a;
    --rgb-success: 34, 197, 94;
    --glow-success: 0 0 12px rgba(var(--rgb-success), 0.7), 0 0 24px rgba(var(--rgb-success), 0.4);
    --color-warning: #f59e0b;
    --color-warning-dark: #d97706;
    --color-warning-text: #1f2937;
    --rgb-warning: 245, 158, 11;
    --glow-warning: 0 0 12px rgba(var(--rgb-warning), 0.7), 0 0 24px rgba(var(--rgb-warning), 0.4);
    --color-error: #ef4444;
    --color-error-dark: #dc2626;
    --rgb-error: 239, 68, 68;
    --glow-error: 0 0 12px rgba(var(--rgb-error), 0.7), 0 0 24px rgba(var(--rgb-error), 0.4);
    --color-text-on-primary: #ffffff;
    --color-text-on-accent: #ffffff;
    --spacing-xs: 0.25rem;
    --spacing-sm: 0.5rem;
    --spacing-md: 1rem;
    --spacing-lg: 1.5rem;
    --spacing-xl: 2rem;
    --border-radius-sm: 6px;
    --border-radius-md: 8px;
    --border-radius-lg: 12px;
    --border-radius-xl: 16px;
    --border-radius-round: 50%;
    --shadow-sm: 0 2px 8px rgba(0,0,0,0.3);
    --shadow-md: 0 5px 15px rgba(0,0,0,0.4);
    --shadow-lg: 0 10px 30px rgba(0,0,0,0.5);
    --shadow-inset: inset 0 2px 5px rgba(0,0,0,0.4);
    --transition-base: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    --transition-fast: all 0.15s ease-out;
  }

  * { 
    box-sizing: border-box; 
    margin: 0; 
    padding: 0; 
  }

  html { 
    font-size: 100%; 
    scroll-behavior: smooth; 
  }

  body { 
    background-color: var(--color-background); 
    color: var(--color-text-primary); 
    font-family: var(--font-family-base); 
    font-size: 14px; 
    line-height: 1.7; 
    min-height: 100vh; 
    overflow-x: hidden; 
    -webkit-font-smoothing: antialiased; 
    -moz-osx-font-smoothing: grayscale; 
  }

  .container { 
    max-width: 1920px; 
    margin: 0 auto; 
    padding: var(--spacing-lg) var(--spacing-xl); 
  }

  .card-style { 
    background-color: var(--color-surface); 
    border-radius: var(--border-radius-lg); 
    border: 1px solid var(--color-border); 
    padding: var(--spacing-lg); 
    margin-bottom: var(--spacing-lg); 
    box-shadow: var(--shadow-md); 
    transition: var(--transition-base); 
    position: relative; 
    display: flex; 
    flex-direction: column; 
  }

  .card-style:hover { 
    transform: translateY(-3px); 
    box-shadow: var(--shadow-lg), 0 0 20px rgba(var(--rgb-primary), 0.2); 
    border-color: var(--color-primary-light); 
  }

  h1, h2, h3, h4, h5, h6 { 
    font-family: var(--font-family-base); 
    font-weight: var(--font-weight-semibold); 
    line-height: 1.4; 
    margin-bottom: var(--spacing-md); 
    color: var(--color-text-primary); 
  }

  h1 { 
    font-size: 2rem; 
    color: var(--color-primary-light); 
    text-shadow: var(--text-shadow-primary); 
    font-weight: var(--font-weight-bold); 
  }

  .page-title-container { 
    display: flex; 
    justify-content: space-between; 
    align-items: center; 
    margin-bottom: var(--spacing-xl); 
    padding-bottom: var(--spacing-md); 
    border-bottom: 1px solid var(--color-divider); 
    flex-wrap: wrap; 
    gap: var(--spacing-md); 
  }

  .page-title-container h1 { 
    margin-bottom: 0; 
    font-size: 1.8rem; 
  }

  .page-title-container h1 i { 
    margin-right: var(--spacing-sm); 
    color: var(--color-primary-base); 
  }

  .app-button, button { 
    padding: calc(var(--spacing-sm) + 2px) var(--spacing-lg); 
    font-size: 0.9rem; 
    font-weight: var(--font-weight-semibold); 
    border-radius: var(--border-radius-md); 
    border: 2px solid transparent; 
    background-color: var(--color-primary-base); 
    color: var(--color-text-on-primary); 
    cursor: pointer; 
    transition: var(--transition-base); 
    text-align: center; 
    line-height: 1.5; 
    letter-spacing: 0.03em; 
    min-width: 140px; 
    text-transform: uppercase; 
    box-shadow: 0 2px 5px rgba(var(--rgb-primary),0.2), 0 0 10px rgba(var(--rgb-primary),0.1) inset; 
    position: relative; 
    overflow: hidden; 
    z-index: 1; 
    display: inline-flex; 
    align-items: center; 
    justify-content: center; 
    vertical-align: middle; 
    margin-top: var(--spacing-xs); 
    margin-bottom: var(--spacing-xs); 
    text-decoration: none;
  }

  .app-button i, button i { 
    margin-right: var(--spacing-sm); 
    font-size: 0.95em; 
  }

  .app-button.primary, button.primary { 
    background-color: var(--color-primary-base); 
    border-color: var(--color-primary-base); 
    color: var(--color-text-on-primary); 
  }

  .app-button.primary:hover, button.primary:hover { 
    background-color: var(--color-primary-light); 
    border-color: var(--color-primary-light); 
    box-shadow: var(--glow-primary), 0 0 15px rgba(var(--rgb-primary),0.3) inset; 
    transform: translateY(-2px) scale(1.02); 
  }

  .app-button.tertiary, button.tertiary { 
    background-color: transparent; 
    border-color: var(--color-secondary-light); 
    color: var(--color-secondary-light); 
    box-shadow: 0 2px 5px rgba(var(--rgb-secondary),0.2); 
  }

  .app-button.tertiary:hover, button.tertiary:hover { 
    background-color: var(--color-secondary-base); 
    color: var(--color-text-on-accent); 
    border-color: var(--color-secondary-base); 
    box-shadow: var(--glow-secondary), 0 0 15px rgba(var(--rgb-secondary),0.3) inset; 
  }

  .app-button.small, button.small { 
    padding: var(--spacing-xs) var(--spacing-sm); 
    font-size: 0.8rem; 
    min-width: auto; 
    letter-spacing: 0.02em; 
  }

  .app-button.danger, button.danger { 
    background-color: transparent; 
    border-color: var(--color-error); 
    color: var(--color-error); 
    box-shadow: 0 2px 5px rgba(var(--rgb-error),0.2); 
  }

  .app-button.danger:hover, button.danger:hover { 
    background-color: var(--color-error); 
    color: var(--color-text-on-accent); 
    border-color: var(--color-error-dark); 
    box-shadow: var(--glow-error), 0 0 15px rgba(var(--rgb-error),0.3) inset; 
  }

  .top-buttons { 
    text-align: center; 
    margin-bottom: var(--spacing-lg); 
    display: flex; 
    justify-content: center; 
    gap: var(--spacing-md); 
    flex-wrap: wrap; 
  }

  /* === Стили для сетки команд === */
  .admin-teams-grid { 
    display: grid; 
    grid-template-columns: repeat(2, 1fr); 
    gap: var(--spacing-md); 
    margin-top: var(--spacing-lg); 
  }

  @media (min-width: 768px) { 
    .admin-teams-grid { 
      grid-template-columns: repeat(3, 1fr); 
      gap: var(--spacing-md); 
    } 
  }

  @media (min-width: 992px) { 
    .admin-teams-grid { 
      grid-template-columns: repeat(4, 1fr); 
      gap: var(--spacing-md); 
    } 
  }

  @media (min-width: 1400px) { 
    .admin-teams-grid { 
      grid-template-columns: repeat(6, 1fr); 
      gap: var(--spacing-sm); 
    } 
  }

  /* === Компактные стили для карточки === */
  .team-card { 
    padding: var(--spacing-sm); 
  }

  .team-card h2 { 
    font-size: 1.1rem; 
    margin-bottom: var(--spacing-xs); 
    white-space: nowrap; 
    overflow: hidden; 
    text-overflow: ellipsis; 
  }

  .team-logo { 
    max-height: 60px; 
    margin-bottom: var(--spacing-sm); 
    object-fit: contain; 
    width: 100%;
  }

  .team-card .no-logo-text { 
    text-align:center; 
    color: var(--color-text-muted); 
    margin-bottom: var(--spacing-sm); 
    font-style: italic; 
    font-size: 0.9rem; 
  }

  .team-info-sort { 
    font-size: 0.75rem; 
    color: var(--color-text-muted); 
    margin-bottom: var(--spacing-sm); 
    line-height: 1.3; 
  }

  .team-info-sort span { 
    display: block; 
  }

  .team-actions { 
    display: flex;
    gap: var(--spacing-sm); 
    margin-bottom: var(--spacing-sm); 
    flex-shrink: 0; 
  }

  .team-actions .app-button.small { 
    font-size: 0.75rem; 
    padding: var(--spacing-xs); 
  }

  /* === Стили для прокручиваемого списка игроков === */
  .team-card .player-list-wrapper { 
    max-height: 190px; 
    overflow-y: auto; 
    margin-top: auto; 
    padding-top: var(--spacing-sm); 
    border-top: 1px solid var(--color-divider); 
    padding-right: var(--spacing-xs); 
    scrollbar-width: thin; 
    scrollbar-color: var(--color-primary-base) var(--color-surface-secondary); 
  }

  .team-card .player-list-wrapper.styled-scrollbar::-webkit-scrollbar { 
    width: 6px; 
    height: 6px; 
  }

  .team-card .player-list-wrapper.styled-scrollbar::-webkit-scrollbar-track { 
    background: var(--color-surface-secondary); 
    border-radius: var(--border-radius-sm); 
  }

  .team-card .player-list-wrapper.styled-scrollbar::-webkit-scrollbar-thumb { 
    background: var(--color-primary-base); 
    border-radius: var(--border-radius-sm); 
    border: 1px solid var(--color-surface-secondary); 
  }

  .team-card .player-list-wrapper.styled-scrollbar::-webkit-scrollbar-thumb:hover { 
    background: var(--color-primary-light); 
  }

  .team-card .players-list { 
    margin-top: 0; 
    padding-top: 0; 
    border-top: none; 
    padding-bottom: var(--spacing-xs); 
  }

  .player-row:last-child { 
    margin-bottom: 0; 
  }

  .team-card .player-list-wrapper .no-players { 
    padding: var(--spacing-md) 0; 
    text-align: center; 
    color: var(--color-text-muted); 
    font-style: italic; 
    font-size: 0.85rem; 
  }

  /* === Стили для строки игрока === */
  .player-row { 
    padding: var(--spacing-xs) var(--spacing-sm); 
    display: flex; 
    align-items: center; 
    background-color: var(--color-surface-secondary); 
    border-radius: var(--border-radius-md); 
    margin-bottom: var(--spacing-sm); 
    border: 1px solid var(--color-border); 
    transition: var(--transition-fast); 
  }

  .player-row:hover { 
    border-color: var(--color-primary-light); 
    background-color: rgba(var(--rgb-primary), 0.05); 
  }

  .player-photo img, .player-photo .no-photo-placeholder { 
    max-height: 35px; 
    width: 35px; 
    height: 35px; 
    font-size: 1rem; 
    margin-right: var(--spacing-sm); 
    border-radius: var(--border-radius-round); 
    border: 1px solid var(--color-border-light); 
    flex-shrink: 0; 
  }

  .player-photo .no-photo-placeholder { 
    background-color: var(--color-surface-tertiary); 
    display: flex; 
    align-items: center; 
    justify-content: center; 
    color: var(--color-text-muted); 
  }

  .player-name { 
    font-size: 0.85rem; 
    flex-grow: 1; 
    overflow: hidden; 
    text-overflow: ellipsis; 
    white-space: nowrap; 
    color: var(--color-text-primary); 
    font-weight: var(--font-weight-medium); 
  }

  .player-actions { 
    gap: var(--spacing-sm); 
    display: flex; 
    flex-shrink: 0; 
  }

  .player-actions .app-button.small i { 
    margin-right: 0; 
  }

  .player-actions .app-button.small { 
    min-width: auto; 
    padding: var(--spacing-xs); 
    line-height: 1; 
  }

  /* === Стили сортировки === */
  .sorting-controls-container {
    background-color: var(--color-surface-secondary);
    padding: var(--spacing-md);
    margin-bottom: var(--spacing-lg);
    border-radius: var(--border-radius-md);
    border: 1px solid var(--color-border);
    display: flex;
    align-items: center;
    gap: var(--spacing-md);
    flex-wrap: wrap;
  }

  /* === Модальные окна === */
  .modal-backdrop { 
    position: fixed; 
    top: 0; 
    left: 0; 
    right: 0; 
    bottom: 0; 
    background: rgba(var(--rgb-primary), 0.1); 
    backdrop-filter: blur(8px); 
    display: none; 
    justify-content: center; 
    align-items: center; 
    z-index: 9999; 
    padding: var(--spacing-md); 
    overflow-y: auto; 
  }
    
  .modal { 
    width: 500px; 
    max-width: 95vw; 
    position: relative; 
    animation: fadeInModal 0.4s cubic-bezier(0.25, 0.8, 0.25, 1) forwards; 
    max-height: 90vh; 
    display: flex; 
    flex-direction: column; 
  }
    
  .modal-content { 
    overflow-y: auto; 
    padding-right: var(--spacing-xs); 
    flex-grow: 1; 
  }
    
  @keyframes fadeInModal { 
    0% { transform: scale(0.9) translateY(20px); opacity: 0; } 
    100% { transform: scale(1) translateY(0); opacity: 1; } 
  }
    
  .close-modal { 
    position: absolute; 
    top: var(--spacing-md); 
    right: var(--spacing-md); 
    background: transparent; 
    border: none; 
    color: var(--color-text-muted); 
    font-size: 1.8rem; 
    line-height: 1; 
    cursor: pointer; 
    padding: var(--spacing-xs); 
    transition: var(--transition-fast); 
    z-index: 10; 
  }
    
  .close-modal:hover { 
    color: var(--color-error); 
    transform: scale(1.1); 
  }
    
  .modal form { 
    margin-top: var(--spacing-md); 
  }
    
  .modal .form-actions { 
    margin-top: var(--spacing-lg); 
    display: flex; 
    justify-content: flex-end; 
    gap: var(--spacing-md); 
    padding-top: var(--spacing-md); 
    border-top: 1px solid var(--color-divider); 
  }
    
  .modal #uploadTeamLogoBtn, .modal #uploadPlayerPhotoBtn { 
    width: 100%; 
    margin-bottom: var(--spacing-sm); 
  }

  .modal .modal-title-text { 
    font-size: 1.6rem; 
    color: var(--color-primary-light); 
    text-shadow: var(--text-shadow-primary); 
    text-align: center; 
    margin-bottom: var(--spacing-lg); 
  }
    
  .modal .modal-title-text i { 
    margin-right: var(--spacing-sm); 
  }

  label { 
    display: block; 
    font-size: 0.8rem; 
    font-weight: var(--font-weight-medium); 
    color: var(--color-text-muted); 
    margin-bottom: var(--spacing-xs); 
    text-transform: uppercase; 
    letter-spacing: 0.05em; 
    margin-top: var(--spacing-sm); 
  }
    
  label i { 
    margin-right: var(--spacing-xs); 
    color: var(--color-primary-light); 
  }

  .header-input, input[type="text"], input[type="password"], input[type="file"], select { 
    background-color: var(--color-surface-tertiary); 
    border: 1px solid var(--color-border); 
    color: var(--color-text-primary); 
    border-radius: var(--border-radius-md); 
    padding: var(--spacing-sm) var(--spacing-md); 
    font-size: 0.9rem; 
    line-height: 1.5; 
    transition: var(--transition-base); 
    outline: none; 
    width: 100%; 
    font-family: var(--font-family-base); 
    box-shadow: var(--shadow-inset); 
    margin-bottom: var(--spacing-sm); 
  }
    
  input[type="text"]:hover, input[type="password"]:hover, input[type="file"]:hover, select:hover, .header-input:hover { 
    border-color: var(--color-primary-light); 
  }
    
  input[type="text"]:focus, input[type="password"]:focus, input[type="file"]:focus, select:focus, .header-input:focus { 
    border-color: var(--color-primary-light); 
    box-shadow: 0 0 0 2px rgba(var(--rgb-primary), 0.2); 
  }

  .sorting-controls-container label {
    margin-bottom: 0;
    margin-top: 0;
    color: var(--color-text-secondary);
    font-size: 0.9rem;
    font-weight: var(--font-weight-medium);
  }

  .sorting-controls-container label i {
    margin-right: var(--spacing-xs);
    color: var(--color-primary-light);
  }

  .sorting-controls-container .control-select {
    width: auto;
    min-width: 200px;
    margin-bottom: 0;
    background-color: var(--color-surface-tertiary); 
    border: 1px solid var(--color-border); 
    color: var(--color-text-primary); 
    border-radius: var(--border-radius-md); 
    padding: var(--spacing-sm) var(--spacing-md); 
    font-size: 0.9rem; 
    line-height: 1.5; 
    transition: var(--transition-base); 
    outline: none; 
    font-family: var(--font-family-base); 
    box-shadow: var(--shadow-inset);
  }

  .sorting-controls-container .control-select:focus {
    border-color: var(--color-primary-light);
    box-shadow: 0 0 0 2px rgba(var(--rgb-primary), 0.2);
  }

  .sorting-controls-container .control-select::placeholder {
    color: var(--color-text-placeholder);
    font-style: italic;
  }

  .styled-select, select:not(.select2-hidden-accessible) { 
    appearance: none; 
    -webkit-appearance: none; 
    -moz-appearance: none; 
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%23a0aec0' viewBox='0 0 16 16'%3E%3Cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1 0-.708z'/%3E%3C/svg%3E"); 
    background-repeat: no-repeat; 
    background-position: right var(--spacing-md) center; 
    background-size: 16px 12px; 
    padding-right: calc(var(--spacing-md) * 2 + 16px); 
  }

  /* === Статистика в заголовке === */
  .stats-info {
    font-size: 0.9rem;
    color: var(--color-text-secondary);
    margin-left: var(--spacing-md);
  }

  /* === Адаптивность === */
  @media (max-width: 768px) { 
    .container { 
      padding: var(--spacing-md); 
    }
        
    .page-title-container { 
      justify-content: center; 
      text-align: center; 
    }
        
    .top-buttons { 
      flex-direction: column; 
      gap: var(--spacing-sm); 
    }
        
    .sorting-controls-container { 
      flex-direction: column; 
      align-items: stretch;
    } 
        
    .sorting-controls-container .control-select { 
      width: 100%;
      min-width: unset;
    }

    h1 { 
      font-size: 1.6rem; 
    } 
        
    .modal { 
      width: 90vw; 
    }
  }

  @media (max-width: 480px) { 
    .modal .form-actions { 
      flex-direction: column; 
    } 
        
    .modal .form-actions .app-button { 
      width: 100%; 
    } 
        
    .modal .modal-title-text { 
      font-size: 1.3rem; 
    }
  }
  </style>
</head>
<body>
  <div class="container">
  <div class="page-title-container">
    <h1><i class="fas fa-shield-alt"></i> Galaxy Admin Panel
      <span class="stats-info">
        Teams: <%= teams.length %> | Players: <%= players.length %>
      </span>
    </h1>
    <a href="https://galaxytimer-production.up.railway.app" class="app-button tertiary"><i class="fas fa-users"></i> OVERLAYS</a>
  </div>

  <div class="top-buttons">
    <button id="btn-show-team-modal" class="app-button primary"><i class="fas fa-users-cog"></i> Create Team</button>
    <button id="btn-show-player-modal" class="app-button primary"><i class="fas fa-user-plus"></i> Create Player</button>
  </div>

  <div class="sorting-controls-container card-style">
    <label for="sortTeamsBy"><i class="fas fa-sort-amount-down"></i> Sort Teams By:</label>
    <select id="sortTeamsBy" class="control-select styled-select">
      <option value="nameAsc">Name (A-Z)</option>
      <option value="nameDesc">Name (Z-A)</option>
      <option value="playerCountAsc">Players (Low to High)</option>
      <option value="playerCountDesc">Players (High to Low)</option>
    </select>
        
    <label for="searchTeams"><i class="fas fa-search"></i> Search Teams:</label>
    <input type="text" id="searchTeams" class="control-select" placeholder="Type team name..." style="min-width: 250px;">
  </div>

  <div id="teamsGrid" class="admin-teams-grid">
    <%
    teams.forEach(team => {
      const teamPlayers = players.filter(p => p.teamId === team.id);
    %>
    <div class="team-card card-style"
       data-id="<%= team.id %>"
       data-name="<%= team.name.toLowerCase() %>"
       data-player-count="<%= teamPlayers.length %>">

      <h2><%= team.name %></h2>
      <% if(team.logo){ %>
      <img src="<%= team.logo %>" alt="<%= team.name %> Logo" class="team-logo" loading="lazy">
      <% } else { %>
      <p class="no-logo-text">No Logo</p>
      <% } %>

      <div class="team-info-sort">
      <span>Players: <%= teamPlayers.length %></span>
      <!-- Debug info -->
      <span style="font-size: 0.7rem; color: #666;">ID: <%= team.id %> | Name: <%= team.name.toLowerCase() %> | Players: <%= teamPlayers.length %></span>
      </div>

      <div class="team-actions">
      <button class="editTeam app-button small tertiary"><i class="fas fa-edit"></i> Edit</button>
      <button class="deleteTeam app-button small danger"><i class="fas fa-trash-alt"></i> Delete</button>
      </div>

      <div class="player-list-wrapper styled-scrollbar">
      <% if(teamPlayers.length > 0){ %>
        <div class="players-list">
        <% teamPlayers.forEach(player => { %>
          <div class="player-row" data-id="<%= player.id %>">
          <div class="player-photo">
            <% if(player.photo){ %>
            <img src="<%= player.photo %>" alt="<%= player.name %>" loading="lazy">
            <% } else { %>
            <div class="no-photo-placeholder"><i class="fas fa-user"></i></div>
            <% } %>
          </div>
          <div class="player-name"><%= player.name %></div>
          <div class="player-actions">
            <button class="editPlayer app-button small tertiary" title="Edit Player"><i class="fas fa-user-edit"></i></button>
            <button class="deletePlayer app-button small danger" title="Delete Player"><i class="fas fa-user-minus"></i></button>
          </div>
          </div>
        <% }); %>
        </div>
      <% } else { %>
        <p class="no-players">No players in this team.</p>
      <% } %>
      </div>
    </div>
    <% }); %>
    <% if(teams.length === 0) { %>
      <p style="grid-column: 1 / -1; text-align: center; color: var(--color-text-muted); padding: var(--spacing-xl) 0;">No teams created yet. Use the 'Create Team' button above.</p>
    <% } %>
  </div>
  </div>

  <!-- Team Modal -->
  <div id="teamModalBackdrop" class="modal-backdrop">
  <div class="modal card-style">
    <button class="close-modal" id="closeTeamModal" aria-label="Close modal">&times;</button>
    <h2 id="teamModalTitle" class="modal-title-text"><i class="fas fa-users-cog"></i> Create Team</h2>
    <div class="modal-content styled-scrollbar">
    <form id="teamForm">
      <input type="hidden" name="id" id="teamId">
      <label for="teamName"><i class="fas fa-signature"></i> Team Name:</label>
      <input type="text" name="name" id="teamName" required class="header-input" placeholder="Enter team name">
      <label for="teamLogoFile"><i class="fas fa-image"></i> Logo File:</label>
      <input type="file" id="teamLogoFile" accept="image/*" class="header-input">
      <button type="button" id="uploadTeamLogoBtn" class="app-button tertiary" style="width:100%; margin-top: var(--spacing-xs); margin-bottom: var(--spacing-sm);"><i class="fas fa-upload"></i> Upload Selected Logo</button>
      <label for="teamLogo"><i class="fas fa-link"></i> Or Logo URL:</label>
      <input type="text" name="logo" id="teamLogo" class="header-input" placeholder="Enter logo URL (overrides file if both set)">
      <div class="form-actions">
      <button type="button" class="app-button tertiary" onclick="hideTeamModal()">Cancel</button>
      <button type="submit" class="app-button primary"><i class="fas fa-save"></i> Save Team</button>
      </div>
    </form>
    </div>
  </div>
  </div>

  <!-- Player Modal -->
  <div id="playerModalBackdrop" class="modal-backdrop">
  <div class="modal card-style">
    <button class="close-modal" id="closePlayerModal" aria-label="Close modal">&times;</button>
    <h2 id="playerModalTitle" class="modal-title-text"><i class="fas fa-user-plus"></i> Create Player</h2>
    <div class="modal-content styled-scrollbar">
    <form id="playerForm">
      <input type="hidden" name="id" id="playerId">
      <label for="playerName"><i class="fas fa-user-tag"></i> Player Name:</label>
      <input type="text" name="name" id="playerName" required class="header-input" placeholder="Enter player's name">
      <label for="playerSteamId"><i class="fab fa-steam-symbol"></i> Steam ID (Optional):</label>
      <input type="text" name="steamId" id="playerSteamId" class="header-input" placeholder="Enter Steam ID">
      <label for="playerPhotoFile"><i class="fas fa-portrait"></i> Photo File:</label>
      <input type="file" id="playerPhotoFile" accept="image/*" class="header-input">
      <button type="button" id="uploadPlayerPhotoBtn" class="app-button tertiary" style="width:100%; margin-top: var(--spacing-xs); margin-bottom: var(--spacing-sm);"><i class="fas fa-upload"></i> Upload Selected Photo</button>
      <label for="playerPhoto"><i class="fas a-link"></i> Or Photo URL:</label>
      <input type="text" name="photo" id="playerPhoto" class="header-input" placeholder="Enter photo URL (overrides file if both set)">

      <label for="playerTeamId"><i class="fas fa-users"></i> Assign to Team:</label>
      <select id="playerTeamId" name="teamId" class="control-select" style="width: 100%;">
      <option value="">-- No Team --</option>
      <% teams.forEach(function(team){ %>
        <option value="<%= team.id %>" data-logo="<%= team.logo ? team.logo : '' %>">
        <%= team.name %>
        </option>
      <% }); %>
      </select>
      <div class="form-actions">
      <button type="button" class="app-button tertiary" onclick="hidePlayerModal()">Cancel</button>
      <button type="submit" class="app-button primary"><i class="fas fa-save"></i> Save Player</button>
      </div>
    </form>
    </div>
  </div>
  </div>

  <script>
  console.log("🚀 Galaxy Admin Panel Loading...");
  console.log("📊 Data: <%= teams.length %> teams, <%= players.length %> players");

  // === Функции модальных окон ===
  function showTeamModal(editMode = false, teamData = null) {
    $("#teamModalTitle").html(editMode ? '<i class="fas fa-edit"></i> Edit Team' : '<i class="fas fa-users-cog"></i> Create Team');
    $("#teamForm")[0].reset();
    $("#teamId").val("");
    $("#teamLogoFile").val('');
    if (editMode && teamData) {
      $("#teamId").val(teamData.id);
      $("#teamName").val(teamData.name);
      $("#teamLogo").val(teamData.logo); 
    }
    $("#teamModalBackdrop").css("display","flex").hide().fadeIn(300);
  }
    
  function hideTeamModal() {
    $("#teamModalBackdrop").fadeOut(200, function() {
      $(this).hide();
      $("#teamForm")[0].reset();
      $("#teamId").val("");
      $("#teamLogoFile").val('');
    });
  }
    
  function showPlayerModal(editMode = false, playerData = null) {
    $("#playerModalTitle").html(editMode ? '<i class="fas fa-user-edit"></i> Edit Player' : '<i class="fas fa-user-plus"></i> Create Player');
    $("#playerForm")[0].reset();
    $("#playerId").val("");
    $("#playerPhotoFile").val(''); 
    if (editMode && playerData) { 
      $("#playerId").val(playerData.id); 
      $("#playerName").val(playerData.name); 
      $("#playerSteamId").val(playerData.steamId); 
      $("#playerPhoto").val(playerData.photo); 
      setTimeout(() => { 
        $('#playerTeamId').val(playerData.teamId).trigger('change'); 
      }, 50); 
    } else { 
      setTimeout(() => { 
        $('#playerTeamId').val("").trigger('change'); 
      }, 50); 
    } 
    $("#playerModalBackdrop").css("display","flex").hide().fadeIn(300);
  }
    
  function hidePlayerModal() {
    $("#playerModalBackdrop").fadeOut(200, function() {
      $(this).hide();
      $("#playerForm")[0].reset();
      $("#playerId").val("");
      $("#playerPhotoFile").val(''); 
      $('#playerTeamId').val("").trigger('change'); 
    });
  }

  $(document).ready(function(){
    console.log("✅ Document ready - Galaxy Admin Panel initialized!");
      
    // Простая сортировка команд
    function sortAndDisplayTeams() {
      console.log("📋 Sorting teams...");
      const sortBy = $('#sortTeamsBy').val();
      const searchQuery = $('#searchTeams').val().toLowerCase().trim();
      const teamsGrid = $('#teamsGrid');
      let allTeamCards = teamsGrid.find('.team-card').get();
          
      console.log("Found", allTeamCards.length, "team cards");
      console.log("Sort by:", sortBy);
      console.log("Search query:", searchQuery);
          
      // Сначала показываем все карточки
      teamsGrid.find('.team-card').show();
          
      // Фильтрация по поисковому запросу
      let teamCards = allTeamCards;
      if (searchQuery) {
        teamCards = allTeamCards.filter(function(card) {
          const teamName = $(card).find('h2').text().toLowerCase();
          const matches = teamName.includes(searchQuery);
          console.log("Team:", teamName, "matches search:", matches);
          return matches;
        });
              
        // Скрываем карточки, которые не подходят под поиск
        $(allTeamCards).each(function() {
          const teamName = $(this).find('h2').text().toLowerCase();
          if (!teamName.includes(searchQuery)) {
            $(this).hide();
          }
        });
      }
          
      // Сортировка
      teamCards.sort(function(a, b) {
        const nameA = $(a).data('name'); 
        const nameB = $(b).data('name');
        const playerCountA = parseInt($(a).data('player-count'), 10); 
        const playerCountB = parseInt($(b).data('player-count'), 10);
              
        console.log("Comparing:", nameA, "vs", nameB);
              
        switch (sortBy) {
          case 'nameAsc': 
            return nameA.localeCompare(nameB);
          case 'nameDesc': 
            return nameB.localeCompare(nameA);
          case 'playerCountAsc': 
            if (playerCountA === playerCountB) return nameA.localeCompare(nameB); 
            return playerCountA - playerCountB;
          case 'playerCountDesc': 
            if (playerCountA === playerCountB) return nameA.localeCompare(nameB); 
            return playerCountB - playerCountA;
          default: 
            return 0;
        }
      });
          
      // Переупорядочиваем элементы в DOM
      console.log("Reordering", teamCards.length, "cards");
      $.each(teamCards, function(index, card) {
        teamsGrid.append(card);
      });
          
      // Показываем сообщение если ничего не найдено
      const noResultsMsg = teamsGrid.find('.no-search-results');
      if (teamCards.length === 0 && searchQuery) {
        if (noResultsMsg.length === 0) {
          teamsGrid.append('<p class="no-search-results" style="grid-column: 1 / -1; text-align: center; color: var(--color-text-muted); padding: var(--spacing-xl) 0; font-style: italic;">🔍 No teams found matching "' + searchQuery + '"</p>');
        }
      } else {
        noResultsMsg.remove();
      }
          
      console.log("✅ Teams sorted by:", sortBy, "| Search:", searchQuery, "| Results:", teamCards.length);
    }
      
    $('#sortTeamsBy').on('change', function() { 
      console.log("🔄 Sort dropdown changed to:", $(this).val());
      sortAndDisplayTeams(); 
    });
      
    // Обработчик поиска с задержкой
    let searchTimeout;
    $('#searchTeams').on('input', function() {
      const query = $(this).val();
      console.log("🔍 Search input changed to:", query);
      clearTimeout(searchTimeout);
      searchTimeout = setTimeout(function() {
        sortAndDisplayTeams();
      }, 300); // Задержка 300мс для оптимизации
    });
      
    // Инициализация сортировки
    setTimeout(function() {
      console.log("🚀 Initializing sorting after page load...");
      if ($('#teamsGrid .team-card').length > 0) { 
        console.log("Found teams, running initial sort");
        sortAndDisplayTeams(); 
      } else {
        console.log("❌ No team cards found for sorting");
      }
    }, 100); // Небольшая задержка для уверенности что DOM готов
      
    // === НАСТОЯЩИЕ ОБРАБОТЧИКИ КНОПОК ===
    $("#btn-show-team-modal").on('click', function(){ 
      console.log("🏆 Create Team button clicked");
      showTeamModal(false); 
    });
      
    $("#btn-show-player-modal").on('click', function(){ 
      console.log("👤 Create Player button clicked");
      showPlayerModal(false);
    });

    // Закрытие модальных окон
    $("#closeTeamModal").on('click', function(){ hideTeamModal(); });
    $("#closePlayerModal").on('click', function(){ hidePlayerModal(); });
      
    // Закрытие по клику на backdrop
    $(document).on("click", ".modal-backdrop", function(event) { 
      if ($(event.target).is(".modal-backdrop")) { 
        if ($("#teamModalBackdrop").is(":visible")) { hideTeamModal(); } 
        if ($("#playerModalBackdrop").is(":visible")) { hidePlayerModal(); } 
      } 
    });

    // === AJAX ОБРАБОТЧИКИ ===
      
    // Загрузка логотипа команды
    $("#uploadTeamLogoBtn").on('click', function(){ 
      const fileInput = $("#teamLogoFile")[0]; 
      if (!fileInput.files.length) { 
        alert("Please select a logo file first."); 
        return; 
      } 
      const formData = new FormData(); 
      formData.append('logoFile', fileInput.files[0]); 
          
      $.ajax({ 
        url: '/api/teams/uploadLogo', 
        type: 'POST', 
        data: formData, 
        contentType: false, 
        processData: false, 
        success: function(response) { 
          $("#teamLogo").val(response.path); 
          alert("✅ Logo uploaded. Path: " + response.path + "\nClick 'Save Team' to apply changes."); 
        }, 
        error: function() { 
          alert("❌ Error uploading logo. Please try again or enter URL manually."); 
        } 
      }); 
    });

    // Загрузка фото игрока
    $("#uploadPlayerPhotoBtn").on('click', function(){ 
      const fileInput = $("#playerPhotoFile")[0]; 
      if (!fileInput.files.length) { 
        alert("Please select a photo file first."); 
        return; 
      } 
      const formData = new FormData(); 
      formData.append('photoFile', fileInput.files[0]); 
          
      $.ajax({ 
        url: '/api/players/uploadPhoto', 
        type: 'POST', 
        data: formData, 
        contentType: false, 
        processData: false, 
        success: function(response) { 
          $("#playerPhoto").val(response.path); 
          alert("✅ Photo uploaded. Path: " + response.path + "\nClick 'Save Player' to apply changes."); 
        }, 
        error: function() { 
          alert("❌ Error uploading photo. Please try again or enter URL manually."); 
        } 
      }); 
    });

    // Сохранение команды
    $("#teamForm").on('submit', function(e){ 
      e.preventDefault(); 
      const id = $("#teamId").val(); 
      const name = $("#teamName").val(); 
      const logo = $("#teamLogo").val(); 
      const url = id ? "/api/teams/" + id : "/api/teams"; 
      const type = id ? "PUT" : "POST"; 
      const data = { name, logo }; 
          
      $.ajax({ 
        url: url, 
        type: type, 
        data: data, 
        success: function(){ 
          console.log("✅ Team saved successfully");
          hideTeamModal(); 
          location.reload(); 
        }, 
        error: function(xhr) { 
          alert("❌ Error saving team: " + (xhr.responseJSON ? xhr.responseJSON.message : xhr.statusText));
        } 
      }); 
    });

    // Сохранение игрока
    $("#playerForm").on('submit', function(e){ 
      e.preventDefault(); 
      const id = $("#playerId").val(); 
      const name = $("#playerName").val(); 
      const steamId = $("#playerSteamId").val(); 
      const photo = $("#playerPhoto").val(); 
      const teamId = $("#playerTeamId").val() || null; 
      const url = id ? "/api/players/" + id : "/api/players"; 
      const type = id ? "PUT" : "POST"; 
          
      $.ajax({ 
        url: url, 
        type: type, 
        data: { name, steamId, photo, teamId }, 
        success: function(){ 
          console.log("✅ Player saved successfully");
          hidePlayerModal(); 
          location.reload(); 
        }, 
        error: function(xhr) { 
          alert("❌ Error saving player: " + (xhr.responseJSON ? xhr.responseJSON.message : xhr.statusText));
        } 
      }); 
    });
      
    // === ОБРАБОТЧИКИ РЕДАКТИРОВАНИЯ И УДАЛЕНИЯ ===
      
    // Редактирование команды
    $(document).on('click', '.editTeam', function(){ 
      const teamId = $(this).closest(".team-card").data("id"); 
      $.get("/api/teams/" + teamId, function(team){ 
        if(team){ 
          console.log("✏️ Editing team:", team.name);
          showTeamModal(true, team); 
        } else { 
          alert("❌ Team data not found."); 
        } 
      }).fail(function(){ 
        alert("❌ Could not fetch team data for editing."); 
      }); 
    });
      
    // Удаление команды
    $(document).on('click', '.deleteTeam', function(){ 
      const card = $(this).closest(".team-card"); 
      const teamName = card.find("h2").text(); 
      const teamId = card.data("id"); 
      if(confirm("❌ Are you sure you want to delete team '" + teamName + "'? This will also unassign its players.")){ 
        $.ajax({ 
          url: "/api/teams/" + teamId, 
          type: "DELETE", 
          success: function(){ 
            console.log("🗑️ Team deleted:", teamName);
            location.reload(); 
          }, 
          error: function(xhr) { 
            alert("❌ Error deleting team: " + (xhr.responseJSON ? xhr.responseJSON.message : xhr.statusText));
          } 
        }); 
      } 
    });
      
    // Редактирование игрока
    $(document).on('click', '.editPlayer', function(){
      const playerId = $(this).closest(".player-row").data("id");
      $.get("/api/players/" + playerId, function(player){ 
        if(player){ 
          console.log("✏️ Editing player:", player.name);
          showPlayerModal(true, player); 
        } else { 
          alert("❌ Player data not found."); 
        } 
      }).fail(function(){ 
        alert("❌ Could not fetch player data for editing."); 
      });
    });
      
    // Удаление игрока
    $(document).on('click', '.deletePlayer', function(){ 
      const row = $(this).closest(".player-row"); 
      const playerName = row.find(".player-name").text(); 
      const playerId = row.data("id"); 
      if(confirm("❌ Are you sure you want to delete player '" + playerName + "'?")){ 
        $.ajax({ 
          url: "/api/players/" + playerId, 
          type: "DELETE", 
          success: function(){ 
            console.log("🗑️ Player deleted:", playerName);
            location.reload(); 
          }, 
          error: function(xhr) { 
            alert("❌ Error deleting player: " + (xhr.responseJSON ? xhr.responseJSON.message : xhr.statusText));
          } 
        }); 
      } 
    });
      
    console.log("🎮 All event handlers set up successfully!");
    console.log("📈 Admin Panel fully loaded and functional!");
  });
  </script>
</body>
</html>

